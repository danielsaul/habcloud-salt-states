{# 
   hostnames : string list
   port : int
   localhost_only : bool
   ssl : { certificate : string; hsts : bool } | None
   default_server : bool
   http_10_host : bool
   forwarded_from : string | None
#}

server {
    {% if localhost_only %}
    {% set v4_host = "127.0.0.1" %}
    {% set v6_host = "[::1]" %}
    {% else %}
    {% set v4_host = "*" %}
    {% set v6_host = "[::]" %}
    {% endif %}

    {% if ssl %}
    {% set listen_options = " ssl" %}
    {% else %}
    {% set listen_options = "" %}
    {% endif %}

    listen {{ v4_host }}:{{ port -}}
        {%- if default_server %} default_server{{ listen_options }}{% endif %};
    listen {{ v6_host }}:{{ port -}}
        {%- if default_server %} ipv6only=on default_server{{ listen_options }}{% endif %};

    {% if forwarded_from %}
        real_ip_header    X-Forwarded-For;
        set_real_ip_from  {{ forwarded_from }};
    {% endif %}

    {% if ssl %}
        {% if ssl.hsts %}
        add_header Strict-Transport-Security "max-age=31536000";
        {% endif %}
        ssl_certificate /etc/ssl/private/{{ ssl.certificate }}.crt;
        ssl_certificate_key /etc/ssl/private/{{ ssl.certificate }}.key;
    {% endif %}

    # "" matches requests with no Host header (i.e., pre HTTP/1.1)
    # note modern browsers visiting via IP /do/ set the Host header,
    # get caught by catchall, and sent to the correct url 
    {% set hostnames2 = hostnames + (['""'] if http_10_host else []) + (['_'] if default_server else []) %}
    server_name {{ hostnames2|join(" ") }};

    proxy_set_header Host $host;
    proxy_set_header X-Forwarded-For $remote_addr;
    {% if forwarded_from %}
        proxy_set_header X-Forwarded-Proto $http_x_forwarded_proto;
    {% else %}
        proxy_set_header X-Forwarded-Proto $scheme;
    {% endif %}
    {# Werkzeug will listen to this; an evil client can provide it. #}
    proxy_set_header X-Forwarded-Host "";
    proxy_redirect off;

    {% set log_tag_s = log_tag|replace('.', '_')|replace('-', '_') %}
    access_log syslog:server=127.0.0.2,tag={{ log_tag_s }} combined;
    error_log syslog:server=127.0.0.2,tag={{ log_tag_s }},severity=warn;

    add_header X-habcloud-site "{{ nginx_tag }}";

    add_header X-Frame-Options DENY;
    add_header X-Content-Type-Options nosniff;

    {% block robots_txt %}
    location = /robots.txt {
        alias /srv/nginx-common/robots.txt;
    }
    {% endblock %}

    {% block favicon_ico %}
    location = /favicon.ico {
        alias /srv/nginx-common/favicon.ico;
    }
    {% endblock %}

    {% block server %}
    {% endblock %}
}
