{# The child template should set the following variables
   hostname : string
   aliases : string list    (list of hostnames)
   default_host : bool
   ssl : { certificate : string } | None
 #}

{# TODO: set SSL certificate for aliases ? #}

{# php_fastcgi_pass contains the bare minimum, for custom/careful
   routing; normally you will need something like the php macro #}
{% macro php_fastcgi_pass(pool) %}
    fastcgi_pass unix:/run/php5-fpm-{{ pool }}.sock;
    fastcgi_index index.php;
    include fastcgi_params;
{% endmacro %}

{% macro php(pool) %}
    try_files $uri =404;
    fastcgi_split_path_info ^(.+\.php)(/.+)$;
    {{ php_fastcgi_pass(pool) }}
{% endmacro %}

server {
    {% if ssl|default(None) %}
    include listen_addresses_ssl;
    ssl_certificate /etc/ssl/private/{{ ssl.certificate }}.crt;
    ssl_certificate_key /etc/ssl/private/{{ ssl.certificate }}.key;
    {% else %}
    include listen_addresses;
    {% endif %}

    server_name {{ hostname }} {%- if default_host %} ""{% endif %};
    # "" matches requests with no Host header (i.e., pre HTTP/1.1)
    # note modern browsers visiting via IP /do/ set the Host header,
    # get caught by catchall, and sent to the correct url

    access_log /var/log/nginx/{{ hostname }}.access.log;
    error_log /var/log/nginx/{{ hostname }}.error.log;

    add_header X-Frame-Options DENY;
    add_header X-Content-Type-Options nosniff;
    {% if ssl|default(None) %}
    add_header Strict-Transport-Security "max-age=31536000";
    {% endif %}

    {% block robots_txt %}
    location = /robots.txt {
        alias /srv/nginx-common/robots.txt;
    }
    {% endblock %}

    {% block favicon_ico %}
    location = /favicon.ico {
        alias /srv/nginx-common/favicon.ico;
    }
    {% endblock %}

    {% block server %}
    {% endblock %}
}

{% if aliases %}
server {
    include listen_addresses;

    {% if ssl|default(None) %}
    include listen_addresses_ssl;
    ssl_certificate /etc/ssl/private/{{ ssl.certificate }}.crt;
    ssl_certificate_key /etc/ssl/private/{{ ssl.certificate }}.key;
    {% endif %}

    server_name {{ aliases|join(' ') }};

    access_log /var/log/nginx/{{ hostname }}.canonicalise.access.log;
    error_log /var/log/nginx/{{ hostname }}.canonicalise.error.log;

    return 301 $scheme://{{ hostname }}$request_uri;
}
{% endif %}

{% if ssl|default(None) %}
server {
    include listen_addresses;

    server_name {{ hostname }} {%- if default_host %} ""{% endif %};

    access_log /var/log/nginx/{{ hostname }}.canonicalise.access.log;
    error_log /var/log/nginx/{{ hostname }}.canonicalise.error.log;

    return 301 $scheme://{{ hostname }}$request_uri;
}
{% endif %}
